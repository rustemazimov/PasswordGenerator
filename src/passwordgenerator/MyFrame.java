/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passwordgenerator;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;

/**
 *
 * @author Rustem
 */
public class MyFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyFrame
     */
    public MyFrame() {
        initComponents();
        setResizable(false);
        //Set the window's coordinates to the screan's coordinates
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        passwordCountLabel = new javax.swing.JLabel();
        passwordLengthLabel = new javax.swing.JLabel();
        coloumnCountTxtF = new javax.swing.JTextField();
        passwordLengthTxtF = new javax.swing.JTextField();
        chooseFileButton = new javax.swing.JButton();
        filePathLabel = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        coloumnCountLabel = new javax.swing.JLabel();
        passwordCountTxtF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        passwordCountLabel.setText("Count of passwords");

        passwordLengthLabel.setText("Length of each password");

        chooseFileButton.setText("Choose File");
        chooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseFileButtonActionPerformed(evt);
            }
        });

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        coloumnCountLabel.setText("Count of coloumns");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(passwordLengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(passwordCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(coloumnCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(coloumnCountTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLengthTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordCountTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLengthTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordCountTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coloumnCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coloumnCountTxtF, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void chooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
          fileChooser.setDialogTitle("Choose a file to read words");
          int status = fileChooser.showOpenDialog(null);
          if(status == JFileChooser.APPROVE_OPTION)
          {
              this.filePathLabel.setText(fileChooser.getSelectedFile().getAbsolutePath());
          }
    }                                                

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        int passwordLength;
        int passwordCount;
        int coloumnCount;
        /**
         * Since these 3 fields shouldn't be negative or something that isn't a number,
         * We must check these cases. I could also handle all these cases only in 
         * 1 try-catch and 1 if block. But I guess I can make it easier to correct wrong input
         * by prompting user about exactly which field isn't correct 
         */
        try {
        	passwordLength = Integer.parseInt(this.passwordLengthTxtF.getText());
        	if(passwordLength < 0)
        	{
        		showMessage("Pathword length cannot be negative", "Error");
        		return;
        	}
        }catch (NumberFormatException e) {
        	showMessage("Pathword length must be a number", "Error");
    		return;
		}
        try {
        	passwordCount = Integer.parseInt(this.passwordCountTxtF.getText());
        	if(passwordCount < 0)
        	{
        		showMessage("Pathword count cannot be negative", "Error");
        		return;
        	}
        }catch (NumberFormatException e) {
        	showMessage("Pathword count must be a number", "Error");
    		return;
		}
        try {
        	coloumnCount = Integer.parseInt(this.coloumnCountTxtF.getText());
        	if(coloumnCount < 0)
        	{
        		showMessage("Coloumn count cannot be negative", "Error");
        		return;
        	}
        }catch (NumberFormatException e) {
        	showMessage("Coloumn count must be a number", "Error");
    		return;
		}
        //Finally if the JVM is already here then it means that every field is entered correctly
        try {
			MainWorker worker = new MainWorker(passwordLength, passwordCount, coloumnCount, this.filePathLabel.getText());
		} catch (FileNotFoundException e) {
			//In a case the file wasn't found
			showMessage("The file you selected or directly wrote the path of file wasn't founded", "Error");
			return;
		} catch (NotExcelFileException e) {
			//In a case the file isn't a Microsoft Excel file (.xlsx)
			showMessage("Only Excel(.xlsx) files are supported", "Error");
			return;
		} catch (IOException ex) {
                    //In a case FileIO is not responding
                    showMessage("Something went wrong with FileIO\nPlease contact us", "Error");
                    return;
                } catch (InvalidFormatException ex) {
                    //In a case the file type is invalid
                    showMessage("Only Excel(.xlsx) files are supported", "Error");
                    return;
                }
        showMessage("Passwords are generated and uploaded to the file Successfully", "Info");
        
    }                                              
    private void showMessage(String txt, String title){
        JOptionPane.showMessageDialog(this, txt, title, JOptionPane.INFORMATION_MESSAGE);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton chooseFileButton;
    private javax.swing.JLabel coloumnCountLabel;
    private javax.swing.JTextField coloumnCountTxtF;
    private javax.swing.JTextField filePathLabel;
    private javax.swing.JButton generateButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel passwordCountLabel;
    private javax.swing.JTextField passwordCountTxtF;
    private javax.swing.JLabel passwordLengthLabel;
    private javax.swing.JTextField passwordLengthTxtF;
    // End of variables declaration                   
}
